{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mtdev\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\project_react\\\\material-ui-starter\\\\src\\\\App.js\";\nimport React, { useState } from \"react\";\nimport \"./styles/App.css\";\nimport { Container, Paper, Box, Grid, TextField, IconButton, Button, Typography, makeStyles } from \"@material-ui/core\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100vw\",\n    height: \"100vh\",\n    backgroundColor: theme.palette.grey[300],\n    paddingTop: theme.spacing(5)\n  },\n  inputGroup: {\n    marginBottom: theme.spacing(1)\n  },\n  addFieldButton: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    margin: theme.spacing(2)\n  },\n  pageTitle: {\n    marginBottom: theme.spacing(2),\n    fontWeight: 'bold',\n    fontSize: '2rem',\n    color: theme.palette.primary.main,\n    textAlign: 'center'\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const layoutTemplate = {\n    name: \"\",\n    pinicial: \"\",\n    pfinal: \"\",\n    size: \"\"\n  };\n  const [layouts, setLayout] = useState([layoutTemplate]);\n\n  const addRows = isDateField => {\n    const newField = isDateField ? {\n      date: new Date()\n    } : layoutTemplate;\n    setLayout([...layouts, newField]);\n  };\n\n  const handleNumericInput = e => {\n    const value = e.target.value;\n    const numericValue = value.replace(/\\D/g, '');\n    e.target.value = numericValue;\n  };\n\n  const changeField = (e, index) => {\n    const updatedField = layouts.map((field, i) => index === i ? { ...field,\n      [e.target.name]: e.target.value\n    } : field);\n    setLayout(updatedField);\n  };\n\n  const onChange = (e, index) => {\n    handleNumericInput(e);\n    changeField(e, index);\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    component: Box,\n    p: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h1\",\n    className: classes.pageTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"Gerador de Layout\"), layouts.map((layout, index) => /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    key: index,\n    className: classes.inputGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, layout.date ? /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Data\",\n    variant: \"outlined\",\n    fullWidth: true,\n    disabled: true,\n    value: layout.date.toLocaleDateString(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Nome\",\n    placeholder: \"Nome\",\n    variant: \"outlined\",\n    fullWidth: true,\n    name: \"name\",\n    onChange: e => onChange(e, index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Ponto Inicial\",\n    placeholder: \"Ponto Inicial\",\n    variant: \"outlined\",\n    fullWidth: true,\n    name: \"pinicial\",\n    onChange: e => onChange(e, index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Ponto Final\",\n    placeholder: \"Ponto Final\",\n    variant: \"outlined\",\n    fullWidth: true,\n    name: \"pfinal\",\n    onChange: e => onChange(e, index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Tamanho\",\n    placeholder: \"Tamanho\",\n    variant: \"outlined\",\n    fullWidth: true,\n    name: \"size\",\n    onChange: e => onChange(e, index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DeleteOutlineIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    className: classes.addFieldButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: () => addRows(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, \"Adicionar Campo Padr\\xE3o\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    container: true,\n    justify: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => addRows(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, \"Adicionar Campo de Data\")))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/mtdev/OneDrive/√Årea de Trabalho/project_react/material-ui-starter/src/App.js"],"names":["React","useState","Container","Paper","Box","Grid","TextField","IconButton","Button","Typography","makeStyles","DeleteOutlineIcon","useStyles","theme","root","width","height","backgroundColor","palette","grey","paddingTop","spacing","inputGroup","marginBottom","addFieldButton","display","justifyContent","margin","pageTitle","fontWeight","fontSize","color","primary","main","textAlign","App","classes","layoutTemplate","name","pinicial","pfinal","size","layouts","setLayout","addRows","isDateField","newField","date","Date","handleNumericInput","e","value","target","numericValue","replace","changeField","index","updatedField","map","field","i","onChange","layout","toLocaleDateString"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,kBAAP;AACA,SACEC,SADF,EAEEC,KAFF,EAGEC,GAHF,EAIEC,IAJF,EAKEC,SALF,EAMEC,UANF,EAOEC,MAPF,EAQEC,UARF,EASEC,UATF,QAUO,mBAVP;AAWA,OAAOC,iBAAP,MAA8B,kCAA9B;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAEG,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,OADH;AAEJC,IAAAA,MAAM,EAAE,OAFJ;AAGJC,IAAAA,eAAe,EAAEJ,KAAK,CAACK,OAAN,CAAcC,IAAd,CAAmB,GAAnB,CAHb;AAIJC,IAAAA,UAAU,EAAEP,KAAK,CAACQ,OAAN,CAAc,CAAd;AAJR,GADiC;AAOvCC,EAAAA,UAAU,EAAE;AACVC,IAAAA,YAAY,EAAEV,KAAK,CAACQ,OAAN,CAAc,CAAd;AADJ,GAP2B;AAUvCG,EAAAA,cAAc,EAAE;AACdC,IAAAA,OAAO,EAAE,MADK;AAEdC,IAAAA,cAAc,EAAE,eAFF;AAGdC,IAAAA,MAAM,EAAEd,KAAK,CAACQ,OAAN,CAAc,CAAd;AAHM,GAVuB;AAevCO,EAAAA,SAAS,EAAE;AACTL,IAAAA,YAAY,EAAEV,KAAK,CAACQ,OAAN,CAAc,CAAd,CADL;AAETQ,IAAAA,UAAU,EAAE,MAFH;AAGTC,IAAAA,QAAQ,EAAE,MAHD;AAITC,IAAAA,KAAK,EAAElB,KAAK,CAACK,OAAN,CAAcc,OAAd,CAAsBC,IAJpB;AAKTC,IAAAA,SAAS,EAAE;AALF;AAf4B,CAAZ,CAAD,CAA5B;;AAwBA,SAASC,GAAT,GAAe;AACb,QAAMC,OAAO,GAAGxB,SAAS,EAAzB;AACA,QAAMyB,cAAc,GAAG;AAAEC,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,QAAQ,EAAE,EAAtB;AAA0BC,IAAAA,MAAM,EAAE,EAAlC;AAAsCC,IAAAA,IAAI,EAAE;AAA5C,GAAvB;AACA,QAAM,CAACC,OAAD,EAAUC,SAAV,IAAuB1C,QAAQ,CAAC,CAACoC,cAAD,CAAD,CAArC;;AAEA,QAAMO,OAAO,GAAIC,WAAD,IAAiB;AAC/B,UAAMC,QAAQ,GAAGD,WAAW,GAAG;AAAEE,MAAAA,IAAI,EAAE,IAAIC,IAAJ;AAAR,KAAH,GAA0BX,cAAtD;AACAM,IAAAA,SAAS,CAAC,CAAC,GAAGD,OAAJ,EAAaI,QAAb,CAAD,CAAT;AACD,GAHD;;AAKA,QAAMG,kBAAkB,GAAIC,CAAD,IAAO;AAChC,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;AACA,UAAME,YAAY,GAAGF,KAAK,CAACG,OAAN,CAAc,KAAd,EAAqB,EAArB,CAArB;AACAJ,IAAAA,CAAC,CAACE,MAAF,CAASD,KAAT,GAAiBE,YAAjB;AACD,GAJD;;AAMA,QAAME,WAAW,GAAG,CAACL,CAAD,EAAIM,KAAJ,KAAc;AAChC,UAAMC,YAAY,GAAGf,OAAO,CAACgB,GAAR,CAAY,CAACC,KAAD,EAAQC,CAAR,KAAcJ,KAAK,KAAKI,CAAV,GAC7C,EAAE,GAAGD,KAAL;AAAY,OAACT,CAAC,CAACE,MAAF,CAASd,IAAV,GAAiBY,CAAC,CAACE,MAAF,CAASD;AAAtC,KAD6C,GACGQ,KAD7B,CAArB;AAEAhB,IAAAA,SAAS,CAACc,YAAD,CAAT;AACD,GAJD;;AAMA,QAAMI,QAAQ,GAAG,CAACX,CAAD,EAAIM,KAAJ,KAAc;AAC7BP,IAAAA,kBAAkB,CAACC,CAAD,CAAlB;AACAK,IAAAA,WAAW,CAACL,CAAD,EAAIM,KAAJ,CAAX;AACD,GAHD;;AAKA,sBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEpB,OAAO,CAACtB,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEV,GAAlB;AAAuB,IAAA,CAAC,EAAE,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAEgC,OAAO,CAACR,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAKGc,OAAO,CAACgB,GAAR,CAAY,CAACI,MAAD,EAASN,KAAT,kBACX,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAA4B,IAAA,GAAG,EAAEA,KAAjC;AAAwC,IAAA,SAAS,EAAEpB,OAAO,CAACd,UAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGwC,MAAM,CAACf,IAAP,gBACC,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,MADR;AAEE,IAAA,OAAO,EAAC,UAFV;AAGE,IAAA,SAAS,MAHX;AAIE,IAAA,QAAQ,MAJV;AAKE,IAAA,KAAK,EAAEe,MAAM,CAACf,IAAP,CAAYgB,kBAAZ,EALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,gBAWC,uDACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,MADR;AAEE,IAAA,WAAW,EAAC,MAFd;AAGE,IAAA,OAAO,EAAC,UAHV;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,IAAI,EAAC,MALP;AAME,IAAA,QAAQ,EAAGb,CAAD,IAAOW,QAAQ,CAACX,CAAD,EAAIM,KAAJ,CAN3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAWE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,eADR;AAEE,IAAA,WAAW,EAAC,eAFd;AAGE,IAAA,OAAO,EAAC,UAHV;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,IAAI,EAAC,UALP;AAME,IAAA,QAAQ,EAAGN,CAAD,IAAOW,QAAQ,CAACX,CAAD,EAAIM,KAAJ,CAN3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAXF,eAqBE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,aADR;AAEE,IAAA,WAAW,EAAC,aAFd;AAGE,IAAA,OAAO,EAAC,UAHV;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,IAAI,EAAC,QALP;AAME,IAAA,QAAQ,EAAGN,CAAD,IAAOW,QAAQ,CAACX,CAAD,EAAIM,KAAJ,CAN3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CArBF,eA+BE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,WAAW,EAAC,SAFd;AAGE,IAAA,OAAO,EAAC,UAHV;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,IAAI,EAAC,MALP;AAME,IAAA,QAAQ,EAAGN,CAAD,IAAOW,QAAQ,CAACX,CAAD,EAAIM,KAAJ,CAN3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA/BF,CAbJ,eAyDE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAzDF,CADD,CALH,eAuEE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAA4B,IAAA,SAAS,EAAEpB,OAAO,CAACZ,cAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,OAAO,EAAE,MAAMoB,OAAO,CAAC,KAAD,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFF,CADF,eAOE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAA0B,IAAA,SAAS,MAAnC;AAAoC,IAAA,OAAO,EAAC,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAA4C,IAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,IAAD,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,CAPF,CAvEF,CADF,CADF;AAyFD;;AAED,eAAeT,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles/App.css\";\nimport {\n  Container,\n  Paper,\n  Box,\n  Grid,\n  TextField,\n  IconButton,\n  Button,\n  Typography,\n  makeStyles,\n} from \"@material-ui/core\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100vw\",\n    height: \"100vh\",\n    backgroundColor: theme.palette.grey[300],\n    paddingTop: theme.spacing(5),\n  },\n  inputGroup: {\n    marginBottom: theme.spacing(1),\n  },\n  addFieldButton: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    margin: theme.spacing(2),\n  },\n  pageTitle: {\n    marginBottom: theme.spacing(2),\n    fontWeight: 'bold',\n    fontSize: '2rem',\n    color: theme.palette.primary.main,\n    textAlign: 'center',\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const layoutTemplate = { name: \"\", pinicial: \"\", pfinal: \"\", size: \"\" };\n  const [layouts, setLayout] = useState([layoutTemplate]);\n\n  const addRows = (isDateField) => {\n    const newField = isDateField ? { date: new Date() } : layoutTemplate;\n    setLayout([...layouts, newField]);\n  };\n\n  const handleNumericInput = (e) => {\n    const value = e.target.value;\n    const numericValue = value.replace(/\\D/g, '');\n    e.target.value = numericValue;\n  };\n\n  const changeField = (e, index) => {\n    const updatedField = layouts.map((field, i) => index === i ?\n      { ...field, [e.target.name]: e.target.value } : field);\n    setLayout(updatedField);\n  };\n\n  const onChange = (e, index) => {\n    handleNumericInput(e);\n    changeField(e, index);\n  };\n\n  return (\n    <Container className={classes.root}>\n      <Paper component={Box} p={4}>\n        <Typography variant=\"h1\" className={classes.pageTitle}>\n          Gerador de Layout\n        </Typography>\n\n        {layouts.map((layout, index) => (\n          <Grid container spacing={3} key={index} className={classes.inputGroup}>\n            {/* Adicionando condi√ß√£o para renderizar campos de data ou padr√£o */}\n            {layout.date ? (\n              <Grid item xs={12} md={12}>\n                <TextField\n                  label=\"Data\"\n                  variant=\"outlined\"\n                  fullWidth\n                  disabled\n                  value={layout.date.toLocaleDateString()}\n                />\n              </Grid>\n            ) : (\n              <>\n                <Grid item xs={12} md={3}>\n                  <TextField\n                    label=\"Nome\"\n                    placeholder=\"Nome\"\n                    variant=\"outlined\"\n                    fullWidth\n                    name=\"name\"\n                    onChange={(e) => onChange(e, index)}\n                  />\n                </Grid>\n                <Grid item xs={12} md={2}>\n                  <TextField\n                    label=\"Ponto Inicial\"\n                    placeholder=\"Ponto Inicial\"\n                    variant=\"outlined\"\n                    fullWidth\n                    name=\"pinicial\"\n                    onChange={(e) => onChange(e, index)}\n                  />\n                </Grid>\n                <Grid item xs={12} md={2}>\n                  <TextField\n                    label=\"Ponto Final\"\n                    placeholder=\"Ponto Final\"\n                    variant=\"outlined\"\n                    fullWidth\n                    name=\"pfinal\"\n                    onChange={(e) => onChange(e, index)}\n                  />\n                </Grid>\n                <Grid item xs={12} md={2}>\n                  <TextField\n                    label=\"Tamanho\"\n                    placeholder=\"Tamanho\"\n                    variant=\"outlined\"\n                    fullWidth\n                    name=\"size\"\n                    onChange={(e) => onChange(e, index)}\n                  />\n                </Grid>\n              </>\n            )}\n\n            <Grid item xs={12} md={1}>\n              <IconButton color=\"secondary\">\n                <DeleteOutlineIcon />\n              </IconButton>\n            </Grid>\n          </Grid>\n        ))}\n\n        <Grid container spacing={3} className={classes.addFieldButton}>\n          <Grid item xs={12} md={6}>\n            {/* Adicionando op√ß√£o de data ao chamar a fun√ß√£o addRows */}\n            <Button variant=\"contained\" onClick={() => addRows(false)}>\n              Adicionar Campo Padr√£o\n            </Button>\n          </Grid>\n          <Grid item xs={12} md={6} container justify=\"flex-end\">\n            <Button variant=\"contained\" color=\"primary\" onClick={() => addRows(true)}>\n              Adicionar Campo de Data\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Container>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}