{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mtdev\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\project_react\\\\material-ui-starter\\\\src\\\\Components\\\\FileUploadButton.js\";\nimport React, { useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles(theme => ({\n  dropzoneStyles: {\n    border: '2px dashed #cccccc',\n    borderRadius: '4px',\n    padding: '20px',\n    textAlign: 'center',\n    cursor: 'pointer',\n    marginTop: theme.spacing(3)\n  }\n}));\n\nfunction FileUploadButton({\n  onFileUpload\n}) {\n  const classes = useStyles();\n  const onDrop = useCallback(acceptedFiles => {\n    // Aqui você pode processar os arquivos, por exemplo, enviá-los para o servidor\n    // No momento, este exemplo simplesmente chama a função onFileUpload com os arquivos\n    onFileUpload(acceptedFiles);\n  }, [onFileUpload]);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop,\n    accept: '.csv' // Aceitar apenas arquivos CSV\n\n  });\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps(), {\n    className: classes.dropzoneStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Arraste e solte um arquivo CSV aqui, ou clique para selecionar.\"));\n}\n\nexport default FileUploadButton;","map":{"version":3,"sources":["C:/Users/mtdev/OneDrive/Área de Trabalho/project_react/material-ui-starter/src/Components/FileUploadButton.js"],"names":["React","useCallback","useDropzone","makeStyles","useStyles","theme","dropzoneStyles","border","borderRadius","padding","textAlign","cursor","marginTop","spacing","FileUploadButton","onFileUpload","classes","onDrop","acceptedFiles","getRootProps","getInputProps","accept"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAD,KAAY;AACrCC,EAAAA,cAAc,EAAE;AACZC,IAAAA,MAAM,EAAE,oBADI;AAEZC,IAAAA,YAAY,EAAE,KAFF;AAGZC,IAAAA,OAAO,EAAE,MAHG;AAIZC,IAAAA,SAAS,EAAE,QAJC;AAKZC,IAAAA,MAAM,EAAE,SALI;AAMZC,IAAAA,SAAS,EAAEP,KAAK,CAACQ,OAAN,CAAc,CAAd;AANC;AADqB,CAAZ,CAAD,CAA5B;;AAWA,SAASC,gBAAT,CAA0B;AAAEC,EAAAA;AAAF,CAA1B,EAA4C;AAC5C,QAAMC,OAAO,GAAGZ,SAAS,EAAzB;AAEE,QAAMa,MAAM,GAAGhB,WAAW,CAAEiB,aAAD,IAAmB;AAC5C;AACA;AACAH,IAAAA,YAAY,CAACG,aAAD,CAAZ;AACD,GAJyB,EAIvB,CAACH,YAAD,CAJuB,CAA1B;AAMA,QAAM;AAAEI,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAkClB,WAAW,CAAC;AAClDe,IAAAA,MADkD;AAElDI,IAAAA,MAAM,EAAE,MAF0C,CAElC;;AAFkC,GAAD,CAAnD;AAKA,sBACE,6CAASF,YAAY,EAArB;AAAyB,IAAA,SAAS,EAAEH,OAAO,CAACV,cAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE,+CAAWc,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uEAFF,CADF;AAMD;;AAGD,eAAeN,gBAAf","sourcesContent":["import React, { useCallback } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    dropzoneStyles: {\r\n        border: '2px dashed #cccccc',\r\n        borderRadius: '4px',\r\n        padding: '20px',\r\n        textAlign: 'center',\r\n        cursor: 'pointer',\r\n        marginTop: theme.spacing(3),\r\n    },\r\n  }));\r\n\r\nfunction FileUploadButton({ onFileUpload }) {\r\nconst classes = useStyles();\r\n\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    // Aqui você pode processar os arquivos, por exemplo, enviá-los para o servidor\r\n    // No momento, este exemplo simplesmente chama a função onFileUpload com os arquivos\r\n    onFileUpload(acceptedFiles);\r\n  }, [onFileUpload]);\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    onDrop,\r\n    accept: '.csv', // Aceitar apenas arquivos CSV\r\n  });\r\n\r\n  return (\r\n    <div {...getRootProps()} className={classes.dropzoneStyles}>\r\n      <input {...getInputProps()} />\r\n      <p>Arraste e solte um arquivo CSV aqui, ou clique para selecionar.</p>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default FileUploadButton;"]},"metadata":{},"sourceType":"module"}