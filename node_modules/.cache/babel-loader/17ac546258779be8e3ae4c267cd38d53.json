{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mtdev\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\project_react\\\\material-ui-starter\\\\src\\\\App.js\";\nimport React, { useState } from \"react\";\nimport \"./styles/App.css\";\nimport { Container, Paper, Box, Grid, TextField, IconButton, Button, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport GridComponent from \"./Components/GridComponent.js\";\nimport TeamButtons from \"./Components/TeamButtons.js\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100vw\",\n    height: \"100vh\",\n    backgroundColor: theme.palette.grey[200],\n    paddingTop: theme.spacing(5)\n  },\n  inputGroup: {\n    marginBottom: theme.spacing(3)\n  },\n  pageTitle: {\n    marginBottom: theme.spacing(5),\n    fontWeight: 'bold',\n    fontSize: '2rem',\n    color: '#0066cc',\n    textAlign: 'center'\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const layoutTemplate = {\n    name: \"\",\n    pinicial: \"\",\n    pfinal: \"\",\n    size: \"\"\n  };\n  const [layouts, setLayout] = useState([layoutTemplate]); //const addRows = () => (\n  //  setLayout([...layouts, layoutTemplate])\n  // );\n\n  const addRows = isDateField => {\n    const newField = isDateField ? {\n      date: new Date()\n    } : layoutTemplate;\n    setLayout([...layouts, newField]);\n  }; // Função para validar entrada numérica\n\n\n  const handleNumericInput = e => {\n    const value = e.target.value; // Substituir não números por uma string vazia\n\n    const numericValue = value.replace(/\\D/g, ''); // Atualizar o valor no campo\n\n    e.target.value = numericValue;\n  }; // Atualiza campo na array\n\n\n  const changeField = (e, index) => {\n    const updatedField = layouts.map((field, i) => index === i ? { ...field,\n      [e.target.name]: e.target.value\n    } : field);\n    setLayout(updatedField);\n  }; // Função para ser usada nos campos de entrada\n\n\n  const onChange = (e, index) => {\n    // Chamando ambas as funções\n    handleNumericInput(e);\n    changeField(e, index);\n  };\n\n  const removeField = index => {\n    const filteredFields = [...layouts];\n    filteredFields.splice(index, 1);\n    setLayout(filteredFields);\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    component: Box,\n    p: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    className: classes.pageTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \"Gerador de Layout\"), layouts.map((layout, index) => /*#__PURE__*/React.createElement(GridComponent, {\n    key: index,\n    layout: layout,\n    index: index,\n    changeField: changeField,\n    onChange: onChange,\n    removeField: removeField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(TeamButtons, {\n    addRows: addRows,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/mtdev/OneDrive/Área de Trabalho/project_react/material-ui-starter/src/App.js"],"names":["React","useState","Container","Paper","Box","Grid","TextField","IconButton","Button","Typography","makeStyles","DeleteOutlineIcon","GridComponent","TeamButtons","useStyles","theme","root","width","height","backgroundColor","palette","grey","paddingTop","spacing","inputGroup","marginBottom","pageTitle","fontWeight","fontSize","color","textAlign","App","classes","layoutTemplate","name","pinicial","pfinal","size","layouts","setLayout","addRows","isDateField","newField","date","Date","handleNumericInput","e","value","target","numericValue","replace","changeField","index","updatedField","map","field","i","onChange","removeField","filteredFields","splice","layout"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles/App.css\";\nimport { Container, Paper, Box, Grid, TextField, IconButton, Button, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport GridComponent from \"./Components/GridComponent.js\";\nimport TeamButtons from \"./Components/TeamButtons.js\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100vw\",\n    height: \"100vh\",\n    backgroundColor: theme.palette.grey[200],\n    paddingTop: theme.spacing(5),\n  },\n  inputGroup: {\n    marginBottom: theme.spacing(3),\n  },\n  pageTitle: {\n    marginBottom: theme.spacing(5), \n    fontWeight: 'bold',\n    fontSize: '2rem',\n    color: '#0066cc',\n    textAlign: 'center',\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const layoutTemplate = { name: \"\", pinicial: \"\", pfinal: \"\", size: \"\" };\n  const [layouts, setLayout] = useState([layoutTemplate,]);\n\n  //const addRows = () => (\n  //  setLayout([...layouts, layoutTemplate])\n // );\n\n const addRows = (isDateField) => {\n  const newField = isDateField ? { date: new Date() } : layoutTemplate;\n  setLayout([...layouts, newField]);\n};\n\n  // Função para validar entrada numérica\n  const handleNumericInput = (e) => {\n    const value = e.target.value;\n    // Substituir não números por uma string vazia\n    const numericValue = value.replace(/\\D/g, '');\n    // Atualizar o valor no campo\n    e.target.value = numericValue;\n  };\n\n  // Atualiza campo na array\n  const changeField = (e, index) => {\n    const updatedField = layouts.map((field, i) => index === i ?\n      { ...field, [e.target.name]: e.target.value } : field);\n    setLayout(updatedField);\n  };\n\n  // Função para ser usada nos campos de entrada\n  const onChange = (e, index) => {\n    // Chamando ambas as funções\n    handleNumericInput(e);\n    changeField(e, index);\n  };\n\n  const removeField = (index) => { \n    const filteredFields = [...layouts];\n    filteredFields.splice(index, 1);\n    setLayout(filteredFields)\n  }\n\n  return (\n    <Container className={classes.root}>\n      <Paper component={Box} p={4}>\n\n        <Typography variant=\"h4\" className={classes.pageTitle}>\n          Gerador de Layout\n        </Typography>\n\n        {layouts.map((layout, index) => (\n          <GridComponent\n            key={index}\n            layout={layout}\n            index={index}\n            changeField={changeField}\n            onChange={onChange}\n            removeField={removeField}\n          />\n        ))}\n\n        <TeamButtons addRows={addRows} />\n        \n      </Paper>\n    </Container>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}