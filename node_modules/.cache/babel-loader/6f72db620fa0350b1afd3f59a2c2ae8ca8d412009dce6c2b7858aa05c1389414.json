{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mthel\\\\Desktop\\\\FrontLayout\\\\Concilia.Front\\\\src\\\\Components\\\\FileUploadButton.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles(theme => ({\n  dropzoneStyles: {\n    border: '2px dashed #cccccc',\n    borderRadius: '4px',\n    padding: '20px',\n    textAlign: 'center',\n    cursor: 'pointer',\n    marginTop: theme.spacing(3)\n  }\n}));\nfunction FileUploadButton({\n  onFileUpload\n}) {\n  _s();\n  const classes = useStyles();\n  const onDrop = useCallback(acceptedFiles => {\n    // Aqui podemos processar os arquivos para enviar ao servidor\n    // No momento, este exemplo simplesmente chama a função onFileUpload com os arquivos\n    onFileUpload(acceptedFiles);\n  }, [onFileUpload]);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop,\n    accept: '.csv' // Aceitar apenas arquivos CSV\n  });\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps(), {\n    className: classes.dropzoneStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Arraste e solte um arquivo CSV aqui, ou clique para selecionar.\"));\n}\n_s(FileUploadButton, \"V++Jdc4hvUvPhKVe8dPNPBGKUsE=\", false, function () {\n  return [useStyles, useDropzone];\n});\n_c = FileUploadButton;\nexport default FileUploadButton;\nvar _c;\n$RefreshReg$(_c, \"FileUploadButton\");","map":{"version":3,"names":["React","useCallback","useDropzone","makeStyles","useStyles","theme","dropzoneStyles","border","borderRadius","padding","textAlign","cursor","marginTop","spacing","FileUploadButton","onFileUpload","_s","classes","onDrop","acceptedFiles","getRootProps","getInputProps","accept","createElement","Object","assign","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mthel/Desktop/FrontLayout/Concilia.Front/src/Components/FileUploadButton.js"],"sourcesContent":["import React, { useCallback } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    dropzoneStyles: {\r\n        border: '2px dashed #cccccc',\r\n        borderRadius: '4px',\r\n        padding: '20px',\r\n        textAlign: 'center',\r\n        cursor: 'pointer',\r\n        marginTop: theme.spacing(3),\r\n    },\r\n  }));\r\n\r\nfunction FileUploadButton({ onFileUpload }) {\r\n  const classes = useStyles();\r\n\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    // Aqui podemos processar os arquivos para enviar ao servidor\r\n    // No momento, este exemplo simplesmente chama a função onFileUpload com os arquivos\r\n    onFileUpload(acceptedFiles);\r\n  }, [onFileUpload]);\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    onDrop,\r\n    accept: '.csv', // Aceitar apenas arquivos CSV\r\n  });\r\n\r\n  return (\r\n    <div {...getRootProps()} className={classes.dropzoneStyles}>\r\n      <input {...getInputProps()} />\r\n      <p>Arraste e solte um arquivo CSV aqui, ou clique para selecionar.</p>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default FileUploadButton;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,QAAQ,OAAO;AAC1C,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,UAAU,QAAQ,0BAA0B;AAErD,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAK,KAAM;EACrCC,cAAc,EAAE;IACZC,MAAM,EAAE,oBAAoB;IAC5BC,YAAY,EAAE,KAAK;IACnBC,OAAO,EAAE,MAAM;IACfC,SAAS,EAAE,QAAQ;IACnBC,MAAM,EAAE,SAAS;IACjBC,SAAS,EAAEP,KAAK,CAACQ,OAAO,CAAC,CAAC;EAC9B;AACF,CAAC,CAAC,CAAC;AAEL,SAASC,gBAAgBA,CAAC;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EAC1C,MAAMC,OAAO,GAAGb,SAAS,CAAC,CAAC;EAE3B,MAAMc,MAAM,GAAGjB,WAAW,CAAEkB,aAAa,IAAK;IAC5C;IACA;IACAJ,YAAY,CAACI,aAAa,CAAC;EAC7B,CAAC,EAAE,CAACJ,YAAY,CAAC,CAAC;EAElB,MAAM;IAAEK,YAAY;IAAEC;EAAc,CAAC,GAAGnB,WAAW,CAAC;IAClDgB,MAAM;IACNI,MAAM,EAAE,MAAM,CAAE;EAClB,CAAC,CAAC;EAEF,oBACEtB,KAAA,CAAAuB,aAAA,QAAAC,MAAA,CAAAC,MAAA,KAASL,YAAY,CAAC,CAAC;IAAEM,SAAS,EAAET,OAAO,CAACX,cAAe;IAAAqB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,iBACzDhC,KAAA,CAAAuB,aAAA,UAAAC,MAAA,CAAAC,MAAA,KAAWJ,aAAa,CAAC,CAAC;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,CAAC,eAC9BhC,KAAA,CAAAuB,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,iEAAkE,CAClE,CAAC;AAEV;AAAChB,EAAA,CApBQF,gBAAgB;EAAA,QACPV,SAAS,EAQeF,WAAW;AAAA;AAAA+B,EAAA,GAT5CnB,gBAAgB;AAuBzB,eAAeA,gBAAgB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}