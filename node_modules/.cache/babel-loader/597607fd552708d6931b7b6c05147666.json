{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mtdev\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\project_react\\\\material-ui-starter\\\\src\\\\App.js\";\n\n// ... (código anterior)\nfunction App() {\n  // ... (código anterior)\n  return /*#__PURE__*/React.createElement(Container, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    component: Box,\n    p: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h1\",\n    className: classes.pageTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, \"Gerador de Layout\"), layouts.map((layout, index) => /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    key: index,\n    className: classes.inputGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  }, layout.date ? /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Data\",\n    variant: \"outlined\",\n    fullWidth: true,\n    disabled: true,\n    value: layout.date.toLocaleDateString(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Nome\",\n    placeholder: \"Nome\",\n    variant: \"outlined\",\n    fullWidth: true,\n    name: \"name\",\n    onChange: e => onChange(e, index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Ponto Inicial\",\n    placeholder: \"Ponto Inicial\",\n    variant: \"outlined\",\n    fullWidth: true,\n    name: \"pinicial\",\n    onChange: e => onChange(e, index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Ponto Final\",\n    placeholder: \"Ponto Final\",\n    variant: \"outlined\",\n    fullWidth: true,\n    name: \"pfinal\",\n    onChange: e => onChange(e, index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Tamanho\",\n    placeholder: \"Tamanho\",\n    variant: \"outlined\",\n    fullWidth: true,\n    name: \"size\",\n    onChange: e => onChange(e, index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DeleteOutlineIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    className: classes.addFieldButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: () => addRows(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"Adicionar Campo Padr\\xE3o\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => addRows(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Adicionar Campo de Data\")))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/mtdev/OneDrive/Área de Trabalho/project_react/material-ui-starter/src/App.js"],"names":["App","classes","root","Box","pageTitle","layouts","map","layout","index","inputGroup","date","toLocaleDateString","e","onChange","addFieldButton","addRows"],"mappings":"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","sourcesContent":["// ... (código anterior)\n\nfunction App() {\n  // ... (código anterior)\n\n  return (\n    <Container className={classes.root}>\n      <Paper component={Box} p={4}>\n        <Typography variant=\"h1\" className={classes.pageTitle}>\n          Gerador de Layout\n        </Typography>\n\n        {layouts.map((layout, index) => (\n          <Grid container spacing={3} key={index} className={classes.inputGroup}>\n            {/* Adicionando condição para renderizar campos de data ou padrão */}\n            {layout.date ? (\n              <Grid item xs={12} md={12}>\n                <TextField\n                  label=\"Data\"\n                  variant=\"outlined\"\n                  fullWidth\n                  disabled\n                  value={layout.date.toLocaleDateString()}\n                />\n              </Grid>\n            ) : (\n              <>\n                <Grid item xs={12} md={3}>\n                  <TextField\n                    label=\"Nome\"\n                    placeholder=\"Nome\"\n                    variant=\"outlined\"\n                    fullWidth\n                    name=\"name\"\n                    onChange={(e) => onChange(e, index)}\n                  />\n                </Grid>\n                <Grid item xs={12} md={2}>\n                  <TextField\n                    label=\"Ponto Inicial\"\n                    placeholder=\"Ponto Inicial\"\n                    variant=\"outlined\"\n                    fullWidth\n                    name=\"pinicial\"\n                    onChange={(e) => onChange(e, index)}\n                  />\n                </Grid>\n                <Grid item xs={12} md={2}>\n                  <TextField\n                    label=\"Ponto Final\"\n                    placeholder=\"Ponto Final\"\n                    variant=\"outlined\"\n                    fullWidth\n                    name=\"pfinal\"\n                    onChange={(e) => onChange(e, index)}\n                  />\n                </Grid>\n                <Grid item xs={12} md={2}>\n                  <TextField\n                    label=\"Tamanho\"\n                    placeholder=\"Tamanho\"\n                    variant=\"outlined\"\n                    fullWidth\n                    name=\"size\"\n                    onChange={(e) => onChange(e, index)}\n                  />\n                </Grid>\n              </>\n            )}\n\n            <Grid item xs={12} md={1}>\n              <IconButton color=\"secondary\">\n                <DeleteOutlineIcon />\n              </IconButton>\n            </Grid>\n          </Grid>\n        ))}\n\n        <Grid container spacing={3} className={classes.addFieldButton}>\n          <Grid item xs={12} md={6}>\n            <Button variant=\"contained\" onClick={() => addRows(false)}>\n              Adicionar Campo Padrão\n            </Button>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Button variant=\"contained\" color=\"primary\" onClick={() => addRows(true)}>\n              Adicionar Campo de Data\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Container>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}