{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mthel\\\\Desktop\\\\FrontLayout\\\\Concilia.Front\\\\src\\\\Components\\\\AbaUpdate.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Grid, TextField, IconButton, Button } from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport TeamButtons from \"./Components/TeamButtons.js\";\nimport App from \"../App.js\";\nconst AbaUpdate = ({\n  dadosDoBackEnd\n}) => {\n  _s();\n  const [dados, setDados] = useState({\n    nome: \"\",\n    pontoInicial: \"\",\n    pontoFinal: \"\",\n    tamanho: \"\"\n  });\n  const [editMode, setEditMode] = useState(false);\n  useEffect(() => {\n    // Aqui você pode fazer uma chamada para o backend para obter os dados e atualizar o estado\n    // Por exemplo:\n    // fetchDadosDoBackEnd().then((response) => setDados(response));\n    // Isso é apenas um exemplo. Certifique-se de implementar de acordo com sua lógica de backend.\n  }, []);\n  const removeField = fieldName => {\n    // Criar uma cópia dos dados\n    const updatedDados = {\n      ...dados\n    };\n    // Remover o campo correspondente\n    delete updatedDados[fieldName];\n    // Atualizar o estado com os dados atualizados\n    setDados(updatedDados);\n  };\n  const handleEdit = () => {\n    setEditMode(!editMode);\n  };\n  const handleChange = (event, field) => {\n    setDados({\n      ...dados,\n      [field]: event.target.value\n    });\n  };\n  const handleSave = () => {\n    // Implemente a lógica para salvar os dados editados\n    console.log(\"Dados salvos:\", dados);\n    setEditMode(false);\n  };\n  const addRows = () => {\n    const newField = layoutTemplate;\n    setLayout([...layouts, newField]);\n  };\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Nome\",\n    variant: \"outlined\",\n    fullWidth: true,\n    value: dados.nome,\n    onChange: e => handleChange(e, 'nome'),\n    disabled: !editMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Ponto Inicial\",\n    variant: \"outlined\",\n    fullWidth: true,\n    value: dados.pontoInicial,\n    onChange: e => handleChange(e, 'pontoInicial'),\n    disabled: !editMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Ponto Final\",\n    variant: \"outlined\",\n    fullWidth: true,\n    value: dados.pontoFinal,\n    onChange: e => handleChange(e, 'pontoFinal'),\n    disabled: !editMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Tamanho\",\n    variant: \"outlined\",\n    fullWidth: true,\n    value: dados.tamanho,\n    onChange: e => handleChange(e, 'tamanho'),\n    disabled: !editMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    sm: 3,\n    md: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, editMode ? /*#__PURE__*/React.createElement(IconButton, {\n    color: \"primary\",\n    onClick: handleSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SaveIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(IconButton, {\n    color: \"primary\",\n    onClick: handleEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(EditIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    sm: 3,\n    md: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    color: \"secondary\",\n    onClick: () => removeField('tamanho'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DeleteOutlineIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(TeamButtons, {\n    addRows: addRows,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  })));\n};\n_s(AbaUpdate, \"fs3yQ0AKZgjvVSpHiSGOmm59u4w=\");\n_c = AbaUpdate;\nexport default AbaUpdate;\nvar _c;\n$RefreshReg$(_c, \"AbaUpdate\");","map":{"version":3,"names":["React","useState","useEffect","Grid","TextField","IconButton","Button","EditIcon","SaveIcon","DeleteOutlineIcon","TeamButtons","App","AbaUpdate","dadosDoBackEnd","_s","dados","setDados","nome","pontoInicial","pontoFinal","tamanho","editMode","setEditMode","removeField","fieldName","updatedDados","handleEdit","handleChange","event","field","target","value","handleSave","console","log","addRows","newField","layoutTemplate","setLayout","layouts","createElement","container","spacing","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","item","xs","sm","md","label","variant","fullWidth","onChange","e","disabled","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mthel/Desktop/FrontLayout/Concilia.Front/src/Components/AbaUpdate.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Grid, TextField, IconButton, Button } from \"@material-ui/core\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\r\nimport TeamButtons from \"./Components/TeamButtons.js\";\r\nimport App from \"../App.js\";\r\n\r\n\r\nconst AbaUpdate = ({ dadosDoBackEnd }) => {\r\n  const [dados, setDados] = useState({\r\n    nome: \"\",\r\n    pontoInicial: \"\",\r\n    pontoFinal: \"\",\r\n    tamanho: \"\"\r\n  });\r\n\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Aqui você pode fazer uma chamada para o backend para obter os dados e atualizar o estado\r\n    // Por exemplo:\r\n    // fetchDadosDoBackEnd().then((response) => setDados(response));\r\n    // Isso é apenas um exemplo. Certifique-se de implementar de acordo com sua lógica de backend.\r\n  }, []);\r\n\r\n  const removeField = (fieldName) => {\r\n    // Criar uma cópia dos dados\r\n    const updatedDados = { ...dados };\r\n    // Remover o campo correspondente\r\n    delete updatedDados[fieldName];\r\n    // Atualizar o estado com os dados atualizados\r\n    setDados(updatedDados);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setEditMode(!editMode);\r\n  };\r\n\r\n  const handleChange = (event, field) => {\r\n    setDados({\r\n      ...dados,\r\n      [field]: event.target.value\r\n    });\r\n  };\r\n\r\n  const handleSave = () => {\r\n    // Implemente a lógica para salvar os dados editados\r\n    console.log(\"Dados salvos:\", dados);\r\n    setEditMode(false);\r\n  };\r\n\r\n  const addRows = () => {\r\n    const newField = layoutTemplate;\r\n    setLayout([...layouts, newField]);\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12} sm={6} md={2}>\r\n        <TextField\r\n          label=\"Nome\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          value={dados.nome}\r\n          onChange={(e) => handleChange(e, 'nome')}\r\n          disabled={!editMode}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6} md={2}>\r\n        <TextField\r\n          label=\"Ponto Inicial\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          value={dados.pontoInicial}\r\n          onChange={(e) => handleChange(e, 'pontoInicial')}\r\n          disabled={!editMode}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6} md={2}>\r\n        <TextField\r\n          label=\"Ponto Final\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          value={dados.pontoFinal}\r\n          onChange={(e) => handleChange(e, 'pontoFinal')}\r\n          disabled={!editMode}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6} md={2}>\r\n        <TextField\r\n          label=\"Tamanho\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          value={dados.tamanho}\r\n          onChange={(e) => handleChange(e, 'tamanho')}\r\n          disabled={!editMode}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={10} sm={3} md={1}>\r\n        {editMode ? (\r\n          <IconButton color=\"primary\" onClick={handleSave}>\r\n            <SaveIcon />\r\n          </IconButton>\r\n        ) : (\r\n          <IconButton color=\"primary\" onClick={handleEdit}>\r\n            <EditIcon />\r\n          </IconButton>\r\n        )}\r\n        </Grid>\r\n        <Grid item xs={10} sm={3} md={1}>\r\n        <IconButton color=\"secondary\" onClick={() => removeField('tamanho')}>\r\n          <DeleteOutlineIcon />\r\n        </IconButton>\r\n        <TeamButtons addRows={addRows} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default AbaUpdate;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}