{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mtdev\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\project_react\\\\material-ui-starter\\\\src\\\\App.js\";\nimport React, { useState } from \"react\";\nimport \"./styles/App.css\";\nimport { Container, Paper, Box, Grid, TextField, IconButton, Button, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100vw\",\n    height: \"100vh\",\n    backgroundColor: theme.palette.grey[200],\n    paddingTop: theme.spacing(5)\n  },\n  inputGroup: {\n    marginBottom: theme.spacing(3)\n  },\n  addFieldButton: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  pageTitle: {\n    marginBottom: theme.spacing(5),\n    fontWeight: 'bold',\n    fontSize: '2rem',\n    color: '#0066cc',\n    textAlign: 'center'\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const layoutTemplate = {\n    name: \"\",\n    pinicial: \"\",\n    pfinal: \"\",\n    size: \"\"\n  };\n  const [layouts, setLayout] = useState([layoutTemplate]);\n\n  const addRows = isDateField => {\n    const newField = isDateField ? {\n      date: new Date()\n    } : layoutTemplate;\n    setLayout([...layouts, newField]);\n  };\n\n  const removeField = index => {\n    const filteredFields = [...layouts];\n    filteredFields.splice(index, 1);\n    setLayout(filteredFields);\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    component: Box,\n    p: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    className: classes.pageTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Gerador de Layout\"), layouts.map((layout, index) => /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    key: index,\n    className: classes.inputGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, layout.date ? /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Data\",\n    variant: \"outlined\",\n    fullWidth: true,\n    disabled: true,\n    value: layout.date.toLocaleDateString(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Nome\",\n    placeholder: \"Nome\",\n    variant: \"outlined\",\n    fullWidth: true,\n    name: \"name\",\n    onChange: e => changeField(e, index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Ponto Inicial\",\n    placeholder: \"Ponto Inicial\",\n    variant: \"outlined\",\n    fullWidth: true,\n    name: \"pinicial\",\n    onChange: e => onChange(e, index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Ponto Final\",\n    placeholder: \"Ponto Final\",\n    variant: \"outlined\",\n    fullWidth: true,\n    name: \"pfinal\",\n    onChange: e => onChange(e, index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Tamanho\",\n    placeholder: \"Tamanho\",\n    variant: \"outlined\",\n    fullWidth: true,\n    name: \"size\",\n    onChange: e => onChange(e, index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    color: \"secondary\",\n    onClick: () => removeField(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DeleteOutlineIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    className: classes.addFieldButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: () => addRows(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, \"Adicionar Campo Padr\\xE3o\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => addRows(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, \"Adicionar Campo de Data\"))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    className: classes.addFieldButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, \"Criar Layout\")))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/mtdev/OneDrive/√Årea de Trabalho/project_react/material-ui-starter/src/App.js"],"names":["React","useState","Container","Paper","Box","Grid","TextField","IconButton","Button","Typography","makeStyles","DeleteOutlineIcon","useStyles","theme","root","width","height","backgroundColor","palette","grey","paddingTop","spacing","inputGroup","marginBottom","addFieldButton","display","justifyContent","pageTitle","fontWeight","fontSize","color","textAlign","App","classes","layoutTemplate","name","pinicial","pfinal","size","layouts","setLayout","addRows","isDateField","newField","date","Date","removeField","index","filteredFields","splice","map","layout","toLocaleDateString","e","changeField","onChange"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles/App.css\";\nimport { Container, Paper, Box, Grid, TextField, IconButton, Button, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100vw\",\n    height: \"100vh\",\n    backgroundColor: theme.palette.grey[200],\n    paddingTop: theme.spacing(5),\n  },\n  inputGroup: {\n    marginBottom: theme.spacing(3),\n  },\n  addFieldButton: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  pageTitle: {\n    marginBottom: theme.spacing(5), \n    fontWeight: 'bold',\n    fontSize: '2rem',\n    color: '#0066cc',\n    textAlign: 'center',\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const layoutTemplate = { name: \"\", pinicial: \"\", pfinal: \"\", size: \"\" };\n  const [layouts, setLayout] = useState([layoutTemplate,]);\n\n  const addRows = (isDateField) => {\n    const newField = isDateField ? { date: new Date() } : layoutTemplate;\n    setLayout([...layouts, newField]);\n  };\n\n  const removeField = (index) => {\n    const filteredFields = [...layouts];\n    filteredFields.splice(index, 1);\n    setLayout(filteredFields);\n  };\n\n  return (\n    <Container className={classes.root}>\n      <Paper component={Box} p={4}>\n        <Typography variant=\"h4\" className={classes.pageTitle}>\n          Gerador de Layout\n        </Typography>\n\n        {layouts.map((layout, index) => (\n          <Grid container spacing={3} key={index} className={classes.inputGroup}>\n            {layout.date ? (\n              <Grid item xs={12} md={12}>\n                <TextField\n                  label=\"Data\"\n                  variant=\"outlined\"\n                  fullWidth\n                  disabled\n                  value={layout.date.toLocaleDateString()}\n                />\n              </Grid>\n            ) : (\n              <>\n                <Grid item xs={12} md={3}>\n                  <TextField\n                    label=\"Nome\"\n                    placeholder=\"Nome\"\n                    variant=\"outlined\"\n                    fullWidth\n                    name=\"name\"\n                    onChange={(e) => changeField(e, index)}\n                  />\n                </Grid>\n                <Grid item xs={12} md={2}>\n                  <TextField\n                    label=\"Ponto Inicial\"\n                    placeholder=\"Ponto Inicial\"\n                    variant=\"outlined\"\n                    fullWidth\n                    name=\"pinicial\"\n                    onChange={(e) => onChange(e, index)}\n                  />\n                </Grid>\n                <Grid item xs={12} md={2}>\n                  <TextField\n                    label=\"Ponto Final\"\n                    placeholder=\"Ponto Final\"\n                    variant=\"outlined\"\n                    fullWidth\n                    name=\"pfinal\"\n                    onChange={(e) => onChange(e, index)}\n                  />\n                </Grid>\n                <Grid item xs={12} md={2}>\n                  <TextField\n                    label=\"Tamanho\"\n                    placeholder=\"Tamanho\"\n                    variant=\"outlined\"\n                    fullWidth\n                    name=\"size\"\n                    onChange={(e) => onChange(e, index)}\n                  />\n                </Grid>\n              </>\n            )}\n\n            <Grid item xs={12} md={1}>\n              <IconButton color=\"secondary\" onClick={() => removeField(index)}>\n                <DeleteOutlineIcon />\n              </IconButton>\n            </Grid>\n          </Grid>\n        ))}\n\n        <Grid container spacing={3} className={classes.addFieldButton}>\n          <Grid item xs={12} md={6}>\n            <Button variant=\"contained\" onClick={() => addRows(false)}>\n              Adicionar Campo Padr√£o\n            </Button>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Button variant=\"contained\" color=\"primary\" onClick={() => addRows(true)}>\n              Adicionar Campo de Data\n            </Button>\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={3} className={classes.addFieldButton}>\n          <Grid item xs={12} md={6}>\n            <Button variant=\"contained\" color=\"primary\">\n              Criar Layout\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Container>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}